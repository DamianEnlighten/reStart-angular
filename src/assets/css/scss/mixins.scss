@mixin border-radius($border-radius) {
	-webkit-border-radius: $border-radius;
	-moz-border-radius: $border-radius;
	-ms-border-radius: $border-radius;
	-o-border-radius: $border-radius;
	border-radius: $border-radius;
	-moz-background-clip: padding; 
	-webkit-background-clip: padding-box; 
	background-clip: padding-box; 
}
@mixin box-sizing($arg: border-box) {
	-webkit-box-sizing: $arg;
	-moz-box-sizing: $arg;
	box-sizing: $arg;
}
@mixin opacity($opacity: 0.5) {
	-moz-opacity: $opacity;
	-khtml-opacity: $opacity;
	-webkit-opacity: $opacity;
	opacity: $opacity;
	$opperc: $opacity * 100;
	filter: alpha(opacity=#{$opperc});
}
@mixin gradient-2color($begin, $end, $fallback: transparent) {
	background: $fallback;
	background: -moz-linear-gradient($begin, $end);
	background: -webkit-linear-gradient($begin, $end);
	background: -o-linear-gradient($begin, $end);
	background: -ms-linear-gradient($begin, $end);
	background: linear-gradient($begin, $end);
}
@mixin transition($transition) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}
@mixin transition-transform($args) {
	-webkit-transition: -webkit-transform $args;
	-moz-transition: -moz-transform $args;
	-ms-transition: -ms-transform $args;
	transition: transform $args;
}
@mixin perspective($perspective) {
	-webkit-perspective: $perspective;
	-moz-perspective: $perspective;
	-ms-perspective: $perspective;
	perspective: $perspective;
}
@mixin perspective-origin($perspective-origin) {
	-webkit-perspective-origin: $perspective-origin;
	-moz-perspective-origin: $perspective-origin;
	-ms-perspective-origin: $perspective-origin;
	perspective-origin: $perspective-origin;
}
@mixin backface-visibility($backface-visibility: hidden) {
	-webkit-backface-visibility: $backface-visibility;
	-moz-backface-visibility: $backface-visibility;
	backface-visibility: $backface-visibility;
}
@mixin transform-origin($transform-origin) {
	-webkit-transform-origin: $transform-origin;
	-moz-transform-origin: $transform-origin;
	-ms-transform-origin: $transform-origin;
	transform-origin: $transform-origin;
}
@mixin transform($transform) {
	-webkit-transform: $transform;
	-moz-transform: $transform;
	-ms-transform: $transform;
	-o-transform: $transform;
	transform: $transform;
}
@mixin translate3d($x: 0, $y: 0, $z: 0) {
	-webkit-transform: translate3d($x,$y,$z);
	-moz-transform: translate3d($x,$y,$z);
	-ms-transform: translate3d($x,$y,$z);
	-o-transform: translate3d($x,$y,$z);
	transform: translate3d($x,$y,$z);
}
@mixin transform-style($transform-style: preserve-3d) {
	-webkit-transform-style: $transform-style;
	-moz-transform-style: $transform-style;
	-ms-transform-style: $transform-style;
	transform-style: $transform-style;
}
@mixin flex-container() {
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flex;
	display: flex;
	-webkit-flex-flow: row wrap;
	-moz-flex-flow: row wrap;
	-ms-flex-direction: row;
	-ms-flex-wrap: wrap;
	-ms-flex-flow: row wrap;
	flex-flow: row wrap;
}
@mixin flex-child($params: 1 auto) {
	-webkit-flex: $params;
	-moz-flex: $params;
	-ms-flex: $params;
	flex: $params;
}